#!/usr/bin/env python
import asyncio
import sys
from datetime import timedelta
from inspect import cleandoc
from operator import itemgetter
from math import floor

import discord
import pendulum
import yaml
from discord.ext import commands

import checks
import cogs.boss
import vaivora.common
import vaivora.db


bot = commands.Bot(command_prefix = ['v!'])

initial_extensions = [
    'cogs.admin',
    'cogs.settings',
    'cogs.boss',
    'cogs.meme',
    'cogs.gems',
    'cogs.offset',
    'cogs.events'
    ]

# snippet from https://gist.github.com/EvieePy/d78c061a4798ae81be9825468fe146be
if __name__ == '__main__':
    with open('config.yaml', 'r') as f:
        conf = yaml.safe_load(f, Loader = yaml.Loader)

    try:
        with open('emoji.yaml', 'r') as f:
            bot.emoji = yaml.safe_load(f, Loader = yaml.Loader)
    except FileNotFoundError:
        # Fallback on default
        with open('emoji.yaml.example', 'r') as f:
            bot.emoji = yaml.safe_load(f, Loader = yaml.Loader)

    for extension in initial_extensions:
        try:
            bot.load_extension(extension)
        except Exception as e:
            print(f'Failed to load extension {extension}.', file = sys.stderr)

bot.remove_command('help')

TERMS = """
By allowing Wings of Vaivora access to your server, you agree to the terms outlined below.

[1.1] - 2019-08-15
---
Data is not collected from users in a personally identifiable way. All data stored is in the form of IDs generated by `discord.py`.
If, and when, features change to request personally identifiable information, you will be asked to agree to the new terms.
**You may decline to accept the new terms; you will not be able to access the functionality that requests this information.**
For the foreseeable future, no such features are planned.
"""

WELCOME = """
Thank you for inviting me to your server!
I am a representative bot for the Wings of Vaivora, here to help you record your journey.
Please read the following before continuing.
""" + TERMS + """
Anyone may contribute to this bot's development: https://github.com/dark-nova/wings-of-vaivora
"""

HELP = """
Here are commands. Valid prefixes are `$` (dollar sign) and `Vaivora,<space>`,
e.g. `$boss` or `Vaivora, help`

`$boss` commands
More info: <https://github.com/dark-nova/wings-of-vaivora/blob/master/docs/BOSS.md>

`$settings` commands
More info: <https://github.com/dark-nova/wings-of-vaivora/blob/master/docs/SETTINGS.md>

`$gems` commands
More info: <https://github.com/dark-nova/wings-of-vaivora/blob/master/docs/GEMS.md>

`$offset` commands
More info: <https://github.com/dark-nova/wings-of-vaivora/blob/master/docs/OFFSET.md>

General
```
$help: prints this page in Direct Message
```
"""

@bot.event
async def on_ready():
    """Handles whenever the bot is ready.

    Returns:
        bool: True

    """
    print("Logging in...")
    await bot.change_presence(
        activity = discord.Game(
            name = (f'in {len(bot.guilds)} guilds. [$help] for info')
        ),
        status = discord.Status.online,
        )
    print(
        cleandoc(
            f"""Successsfully logged in as:
            - {bot.user.name}#{bot.user.discriminator}: ID {bot.user.id}.
            Ready!"""
            )
        )
    return True


@bot.event
async def on_guild_join(guild):
    """Handles what to do when a guild adds Wings of Vaivora.

    Args:
        guild (discord.Guild): the guild which this client has joined

    Returns:
        bool: True if successful; False otherwise

    """
    #vaivora_version = vaivora.version.get_current_version()

    if guild.unavailable:
        return False

    guild_db = vaivora.db.Database(guild.id)
    await guild_db.create_all(guild.owner.id)
    await cogs.boss.add_new_guild(guild.id)

    await guild.owner.send(WELCOME)

    return True


@bot.command(aliases = ['halp'])
async def help(ctx):
    """Retrieves the help pages for `$help`.

    Args:
        ctx (discord.ext.commands.context): context of the message

    Returns:
        bool: True if successful; False otherwise

    """
    try:
        await ctx.author.send(HELP)
    except:
        return False

    return True


if __name__ == '__main__':
    bot.loop.run_until_complete(bot.start(conf['discord_token']))
